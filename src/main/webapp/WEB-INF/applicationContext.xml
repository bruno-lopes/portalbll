<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    
    
    <!-- Pacotes com servicos e repositórios Spring -->
    <context:component-scan  base-package="com.herokuapp.portalbll.services.impl"/>
    <context:component-scan base-package="com.herokuapp.portalbll.daos.impl"/>
    
    <!-- Logger Listener - Debug Purposes -->
    <!--
    <bean id="loggerListener" class="org.springframework.security.access.event.LoggerListener"/>       
    -->
    
    <!--Database configuration-->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="/WEB-INF/jdbc.properties" />
    
    
    
    
    <!-- <bean class="java.net.URI" id="dbUrl">
            <constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
        </bean>

        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
            <property name="driverClassName" value="org.postgresql.Driver"/>
            <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + @dbUrl.getPath() }"/>
            <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
            <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
        </bean>
    
     -->
    
    
    
    
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="${jdbc.driverClassName}"
          p:url="${jdbc.url}"
          p:username="${jdbc.username}"
          p:password="${jdbc.password}" />
          
          
          <!-- p:url="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + @dbUrl.getPath() }"
          p:username="#{ @dbUrl.getUserInfo().split(':')[0] }"
          p:password="#{ @dbUrl.getUserInfo().split(':')[1] }" />-->
          
      
                     
    <!-- Persistence Configuration -->
    <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean" > 
        <property name="persistenceUnitName" value="portalbllPU"/>
    </bean>
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
    
    <!-- Transaction Manager Configuration -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    <tx:annotation-driven />
    
    
    

    
    <!-- Configuração do Spring Security -->
    <!-- Definição da página de acesso negado (devido ao tipo de usuário) -->
    <security:http auto-config="true"  access-denied-page="/paginas/accessDenied.xhtml">
        <!-- Padrão das urls que serão interceptadas pelo Spring Security, e os tipos de acesso -->
        <security:intercept-url pattern="/paginas/public/**"
                                access="ROLE_ALLACCESS, ROLE_URLACCESS, ROLE_AFF"/>
        <!-- Padrão das urls que serão interceptadas pelo Spring Security, e os tipos de acesso -->
        <security:intercept-url pattern="/j_spring_security_check" access="ROLE_ANONYMOUS"/>
        
        <!-- Página com o formulário de loggin, página de sucesso (default),
        página que fará o processamento (j_spring_security_check) e página para
        falha no login -->
        <security:form-login login-page="/paginas/login.xhtml"
                             default-target-url="/paginas/public/teste.xhtml"
                             login-processing-url="/j_spring_security_check"
                             authentication-failure-url="/paginas/login.xhtml"/>
        
        <!-- Página para logout com sucesso -->
        <security:logout logout-success-url="/paginas/login.xhtml"/>
        
    </security:http>
    
    <!--  Declaração do Bean que faz a verificação dos usuários -->
    <bean id="userDetailsService"
      class="com.herokuapp.portalbll.services.impl.UserDetailsServiceImpl">        
    </bean>
    
    <!-- Associa o bean de verificação dos usuários com o Spring Security -->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="userDetailsService" />
    </security:authentication-manager>
    

</beans>
